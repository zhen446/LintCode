bool isValidSudoku(const vector<vector<char>>& board) {
	// row_____________________________________
	for (int i = 0; i<9; i++)
	{
		int count[9] = { 0 };
		for (int j = 0; j<9; j++)
		{
			int nums = 0;
			for (int k = 49; k <= 57; k++)
			{
				
				if (board[i][j] == (char)k && count[nums] == 0)
					count[nums] = 1;
				else if (board[i][j] == (char)k && count[nums] == 1)
					return false;
				nums++;
			}
		}
	}

	//col_____________________________________
	for (int i = 0; i<9; i++)
	{
		int count[9] = { 0 };
		for (int j = 0; j<9; j++)
		{
			int nums = 0;
			for (int k = 49; k <= 57; k++)
			{
				if (board[j][i] == (char)k && count[nums] == 0)
					count[nums] = 1;
				else if (board[j][i] == (char)k && count[nums] == 1)
					return false;
				nums++;
			}
		}
	}

	// 3x3_____________________________________
	for (int i = 0; i < 9; i +=3)
	{
		for (int j = 0; j < 9; j +=3)
		{
			int count[9] = { 0 };
			
			for (int m = i; m < i + 3; m++)
			{
				for (int n = j; n < j + 3; n++)
				{
					int nums = 0;
					for (int k = 49; k <= 57; k++)
					{
						if (board[m][n] == (char)k && count[nums] == 0)
							count[nums] = 1;
						else if (board[m][n] == (char)k && count[nums] == 1)
							return false;
						nums++;
					}
				}
			}
		}
	}

	return true;
    }
